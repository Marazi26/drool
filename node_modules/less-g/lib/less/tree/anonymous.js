var Node = require('./node');

var Anonymous = function (value, index, currentFileInfo, mapLines, rulesetLike, visibilityInfo) {
    this.value = value;
    this._index = index;
    this._fileInfo = currentFileInfo;
    this.mapLines = mapLines;
    this.rulesetLike = (typeof rulesetLike === 'undefined') ? false : rulesetLike;
    this.allowRoot = true;
    this.copyVisibilityInfo(visibilityInfo);
};
Anonymous.prototype = new Node();
Anonymous.prototype.type = 'Anonymous';
Anonymous.prototype.eval = function () {
    return new Anonymous(this.value, this._index, this._fileInfo, this.mapLines, this.rulesetLike, this.visibilityInfo());
};
Anonymous.prototype.compare = function (other) {
    return other.toCSS && this.toCSS() === other.toCSS() ? 0 : undefined;
};
Anonymous.prototype.isRulesetLike = function() {
    return this.rulesetLike;
};
Anonymous.prototype.genCSS = function (context, output) {
    this.nodeVisible = Boolean(this.value);
    if (this.nodeVisible) {
        let value = this.value;
        if (document && document.body) {
            let pa = document.body.clientWidth/750;
            let reg = new RegExp(/\d+\.?\d*rpx/);
            for (let m; m = reg.exec(value);) {
                let num = parseFloat(m[0]);
                value = value.replace(m, (num * pa) + 'px');
            }
        }
        output.add(value, this._fileInfo, this._index, this.mapLines);
    }
};
module.exports = Anonymous;
